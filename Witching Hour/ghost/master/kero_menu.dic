OnFinishPotion : all
{
	"\1\s[10]\i[15]"
	--
	if cauldronIngrCount == 2 && stirred != 1
	{
		stirred = 1
		_potReq = IARRAY
		_caulIngrCheck = cauldronIngr[0] + "," + cauldronIngr[1] //+ "," + cauldronIngr[2] 

		for _i = 0; _i < ARRAYSIZE(potReqCategory); _i++
		{
			_potReq ,= potReqCategory[_i] + "," + potReqElement[_i] //+ ","  + potReqOrigin[_i]
		}

		_potionIndex = ASEARCH(_caulIngrCheck,_potReq)

		if _potionIndex == -1 || (RAND(PaceSetting[5]) == 1 && Buttons[8] == "ON")
		{
			caulPotion = "Failed Potion"
		}
		else 
		{
			caulPotion = potName[_potionIndex]
		}
	}
	elseif stirred != 1
	{
		cauldronIngrCount = 0
	}
	--
	_potionIndex
	//--
	//WitchSur + "[mocking]Another failed one, probably" 
}

OnBookMenu : all
{
	"\p[2]\b2\_q\f[align,center]* What are you looking for?\n\n[half]"
	"\f[align,default]\![*]\q[Ingredients,OnIngredientMenu]\n"
	"\![*]\q[Potion Recipes,OnPotionMenu]\n"
	"\![*]\q[Apprentice Profiles,OnStudentMenu]\n"
	"\![*]\q[Glossary,OnGlossary]\n"
	"\n[half]\![*]\q[Close the grimoire,]\n"
}

OnGlossary : all
{
	"\p[2]\b2\_q\f[align,center]**Glossary**\n"
	"\f[align,default]\![*]\q[Potion Making,OnExplain,potion making]\n"
	"\![*]\q[Ingredient Traits and Potion Recipes,OnExplain,traits]\n"
	"\![*]\q[Crystal Ball,OnExplain,ball]\n"
	"\![*]\q[Grimoire,OnExplain,book]\n"
	"\![*]\q[Elder Witch,OnExplain,elders]\n"
	"\![*]\q[Arcane Institute of Witchcraft,OnExplain,academy]\n"
	"\![*]\q[Apprenticeship and Discipleship,OnExplain,apprentice]\n"
	"\![*]\q[Ancient Rules,OnExplain,rules]\n"
	"\![*]\q[Magic License,OnExplain,license]\n"
	"\n[half]\![*]\q[Previous page,OnBookMenu]\n"
	"\n[half]\![*]\q[Close the grimoire,]\n"
}

OnExplain : all
{
	"\p[2]\b[2]\b2\f[align,center]\![set,balloontimeout,0]"
	if reference0 == "potion making"
	{
		"**Potion Making**\n\n[half]\f[align,default]1. Gather 2 ingredients \n((by double clicking on them))\n2. Take them out of your bag \n((by double clicking the bag and navigating the menu))\n3. Drop them into your cauldron \n((by dragging them on to the cauldron))\n4. Stir you mixture \n((By clicking on the laddle))\n5. Carefully take your potion bottle \n((by clicking on the potion bottle on the shelf))\n6. Bottle your potion \n((by dragging it on to the cauldron))\n7. Testing! \n((By draggin the potion on to the witch))"
		"\1Experiment with different ingredients to discover %(potnum) potions!\n"
	}
	elseif reference0 == "academy"
	{
		"**Arcane Academy**\n\n[half]\f[align,default]Arcane Institute of Witchcraft is known as the first institute for learning witchcraft, students can be of any age and one class often has a wide range of ages. It is surrounded by a forest, which is often used for training. After at least 4 years of learning magic, the students are with no exceptions send for an \_a[OnExplain,apprentice]apprenticeship\_a where the witch in charge of them decided when they are ready to get the final exam to get their \_a[OnExplain,license]license\_a.\n\n[half]Attending the institute is free, however any additional supplies have to be bought by the students and their family. As the oldest Institute of Witchcraft, it follows the \_a[OnExplain,rules]Ancient Rules\_a set in place by the first headmaster.\n"
	}
	elseif reference0 == "traits"
	{
		"**Ingredient Traits**\n\n[half]\f[align,default]Each ingridient has 2 traits: A category, and element. Those traits decide what potion is made. You can document those trait in your \_a[OnExplain,book]grimoire\_a."
		"\1\b2\f[align,center]**Potion Recipes**\n\n[half]\f[align,default]Each potion takes on one trait of the ingredient, depending on the order of adding them to the cauldron.\n[half]\n1. Category\n2. Element\n\n[half]You can document which traits are needed for which potion in your \_a[OnExplain,book]grimoire\_a.\n"
	}
	elseif reference0 == "ball"
	{
		"**Crystal ball**\n\n[half]\f[align,default]One of the basic tools of a witch. It is most often used for divination related rituals. Many witches also use it to confirm information they wrote in their grimoire during their experiments. After use, it needs some time to recharge before next use.\n"
	}
	elseif reference0 == "book"
	{
		"**Grimoire**\n\n[half]\f[align,default]A grimoire is one of the basic tools of a witch. It's used to store any information that helps with one's craft. Examples:\n\n[half]1. Spells\n2. Rituals\n3. Magic Ingredients\n4. Potion Recipes\n\n[half]It also means, simply, a journal of a witch.\n"
	}
	elseif reference0 == "elders"
	{
		"**Elder Witch**\n\n[half]\f[align,default]A witch that, after getting a \_a[OnExplain,license]license\_a, helped to significantly progress the understanding of magic or achieved a great deed using magic recognized by the High Council.\n"
	}
	elseif reference0 == "apprentice"
	{
		"**Apprenticeship**\n\n[half]\f[align,default]Apprenticeship is a requirement for all witches from \_a[OnExplain,academy]Arcane Institute of Witchcraft\_a and those that lost their \_a[OnExplain,license]license\_a or used magic outside of an institute without having it. It is meant to teach them about the use of magic in real life situations. The apprenticeship has no time limit, it is up to the witch leading it when it ends. \_a[OnExplain,elders]Elder Witches\_a are often assigned the _problematic_ witches, as they are seen as the most responsible considering their achievements.\n\n[half]Apprenticeship with an Elder Witch lasts until they decide that the apprentice is responsible enough to get a \_a[OnExplain,license]license\_a. However, in some instances the apprenticeship is basically permanent, as the apprentice is seen as unredeemable. The apprentices have to follow their witches words as they are bound by a sigil. The sigil that each student has when entering an apprenticeship disallows them from disobeying their mentor. The only way to leave the apprenticeship is to resign from the license, but that is synonymous with never being able to use magic again until one tries to pass an apprenticeship again or enter another institute, where the anicent rules do not apply\n"
		"\1\b2\f[align,center]**Discipleship**\n\n[half]\f[align,default]Disciples are a sort of privilege for an \_a[OnExplain,elders]Elder Witches\_a, after gaining a title, they are allowed to accept disciples, the discipleship itself is just like an apprenticeship, with the main difference being that a disciple of an \_a[OnExplain,elders]Elder witche\_a is not required to attend an institute to get their \_a[OnExplain,license]license\_a.\n"
	}
	elseif reference0 == "rules"
	{
		"**Ancient Rules**\n\n[half]\f[align,default]The rules set in place by the first headmaster of \_a[OnExplain,academy]Arcane Institute of Witchcraft\_a, those rules cannot be revoked or broken, as they are protected by strong magic. The most known rule is 'anyone has the right to learn' which forbids rejecting students, no matter the age, background or experience. This rule also forbids expulsion of students, no matter what they do, which before magic was normalized was meant to protect from discrimination, nowadays, it only causes problems to staff.\n\n[half]Because of this rule, \_a[OnExplain,academy]Arcane Institute of Witchcraft\_a requires students to go through a process of \_a[OnExplain,apprentice]apprenticeship\_a, it is a loophole to not allow students that otherwise would have been expelled from acquiring a \_a[OnExplain,license]license\_a. The institute has a mutual contract with many \_a[OnExplain,elders]Elder Witches\_a, in which the institute sends them apprentices that the \_a[OnExplain,elders]Elder Witches\_a try and redeem or if that doesn't work, just use as free help around their workshop or testing guinea pigs until the apprentice gives up trying to get a \_a[OnExplain,license]license\_a.\n"
	}
	elseif reference0 == "license"
	{
		"**Magic License**\n\n[half]\f[align,default]The Magic License is a document allowing the use of magic outside of a learning environment. To get a license, one must first attend a magic institute or become a \_a[OnExplain,apprentice]disciple\_a, and in the case of going to \_a[OnExplain,academy]Arcane Institute of Witchcraft\_a one must also pass an \_a[OnExplain,apprentice]apprenticeship\_a with a licensed witch.\n"
	}

	"\n[half]\![*]\q[Previous page,OnGlossary]\n"
	"\n[half]\![*]\q[Close the grimoire,]\n"
}

OnStudentMenu : all
{
	"\_q\p[2]\b2\f[align,center]\![set,autoscroll,disable]**Your current apprentices**:\n\n[half]\f[align,default]"
	for _i = 0, _j = 1, _split = ""; _i < ARRAYSIZE(WitchProfile);_i++,_j++
	{
		_split = SPLIT(WitchProfile[_i],"\n")
		"\![*]\__q[OnStudentPage," + _i + "]" +  _j + "." + TOPROPER(_split[0]) + "\__q\n"
	}

	"\n[half]\![*]\q[Previous page,OnBookMenu]\n"
	"\n[half]\![*]\q[Close the grimoire,]\n"
}

OnStudentPage : all
{
	_index = reference0
	_split = SPLIT(WitchProfile[_i],"\n")
	_print = ""
	"\_q\p[2]\b2\f[align,center]\![set,autoscroll,disable]-=**%(_split[0])**=-\n\n[half]\f[align,default]"
	for _i = 1, _temp = ""; _i < ARRAYSIZE(_split);_i++
	{
		_print += _split[_i] + "\n"
	}

	"%(_print)\n[half]\![*]\q[Previous page,OnStudentMenu]\n"
	"\n[half]\![*]\q[Close the grimoire,]\n"
}

OnPotionMenu : all
{
	"\_q\p[2]\b2\f[align,center]\![set,autoscroll,disable]**Discovered Potions**:\n\n[half]\f[align,default]"
	for _i = 0, _j = 1,_nameFound = 0; _i < ARRAYSIZE(potName);_i++,_nameFound = 0
	{
		if potUserName[_i] != ""
		{
			//if "_[o]" _in_ potUserReqCategory[_i] && "_[o]" _in_ potUserReqElement[_i] && "_[o]" _in_ potUserReqOriging[_i]; _nameFound = 1
			if "_[o]" _in_ potUserReqCategory[_i] && "_[o]" _in_ potUserReqElement[_i]; _nameFound = 1
			else; _nameFound = 0

			if Buttons[1] == "ON" && _nameFound == 1 || Buttons[7] == "ON" && potUsed[_i] == 1
			{
				if _nameFound == 1; "==\![*]\__q[OnPotionPage," + _i + "]" +  _j + "." + TOPROPER(potName[_i]) + "\__q==\n"
				else; "\![*]\__q[OnPotionPage," + _i + "]" +  _j + "." + TOPROPER(potName[_i]) + "\__q\n"
			}
			else; "\![*]\__q[OnPotionPage," + _i + "]" +  _j + "." + TOPROPER(potUserName[_i]) + "\__q\n"
			_j++
		}
	}
	"\n[half]\![*]\q[Previous page,OnBookMenu]\n"
	"\n[half]\![*]\q[Close the grimoire,]\n"
}

OnPotionPage : all
{
	_index = TOINT(reference0)
	_nameFound = 0
	if potUserReqCategory[_index] == ""; potUserReqCategory[_index] = "?????"
	if potUserReqElement[_index] == ""; potUserReqElement[_index] = "?????"
	//if potUserReqOriging[_index] == ""; potUserReqOriging[_index] = "?????"
	--
	"\b2\_q\![set,autoscroll,disable]"

	//if "_[o]" _in_ potUserReqCategory[_index] && "_[o]" _in_ potUserReqElement[_index] && "_[o]" _in_ potUserReqOriging[_index]; _nameFound = 1
	if "_[o]" _in_ potUserReqCategory[_index] && "_[o]" _in_ potUserReqElement[_index]; _nameFound = 1
	else; _nameFound = 0

	"\f[align,center]-=**\__q[OnPotNameChange,%(_index)]%(TOUPPER(potUserName[_index]))**=-\__q\n"
	if _nameFound == 1 || ( Buttons[7] == "ON" && potUsed[_index] == 1 ); "=-_%(potName[_index])_-=\n\n[half]"
	else; "=-_??????_-=\n\n[half]"
	"\f[align,default]RECIPE:\n"
	"=-**Category**: "
	if "_[o]" _in_ potUserReqCategory[_index]; "==%(REPLACE(potUserReqCategory[_index],'_[o]',''))==\n"
	elseif "_[x]" _in_ potUserReqCategory[_index]; "\__q[OnPotChange,category,%(_index)]~~%(REPLACE(potUserReqCategory[_index],'_[x]',''))~~\__q\n"
	else; "\__q[OnPotChange,category,%(_index)]%(potUserReqCategory[_index])\__q\n"
	"**Element**: "
	if "_[o]" _in_ potUserReqElement[_index]; "==%(REPLACE(potUserReqElement[_index],'_[o]',''))==\n"
	elseif "_[x]" _in_ potUserReqElement[_index]; "\__q[OnPotChange,element,%(_index)]~~%(REPLACE(potUserReqElement[_index],'_[x]',''))~~\__q\n"
	else; "\__q[OnPotChange,element,%(_index)]%(potUserReqElement[_index])\__q\n"
	/*"**Origin**: "
	if "_[o]" _in_ potUserReqOriging[_index]; "==%(REPLACE(potUserReqOriging[_index],'_[o]',''))==\n"
	elseif "_[x]" _in_ potUserReqOriging[_index]; "\__q[OnPotChange,origin,%(_index)]~~%(REPLACE(potUserReqOriging[_index],'_[x]',''))~~\__q\n"
	else; "\__q[OnPotChange,origin,%(_index)]%(potUserReqOriging[_index])\__q\n"*/
	"-=\n\n\n[half]\![*]\q[Previous page,OnPotionMenu]\n"
	"\n[half]\![*]\q[Close the grimoire,]\n"
}

OnPotNameChange
{
	"\p[2]What do you want to call this potion?\![open,inputbox,OnPotionNameChange,--reference=%(reference0),--timeout=0]"
}

OnPotionNameChange
{ 
	if reference0 != ""; potUserName[TOINT(reference2)] = reference0
	else; potUserName[TOINT(reference2)] = "Potion Nr" + reference2
	--
	"\![raise,OnPotionPage,%(reference2)]"
}

OnPotChange : all
{
	"\p[2]\b2\_q\![set,autoscroll,disable]"

	if reference0 == "category"
	{
		"* Which category does this potion need?\n\n"
		"\![*]\q[Fauna,OnSetPot,category,Fauna,%(reference1)]\n"
		"\![*]\q[Flora,OnSetPot,category,Flora,%(reference1)]\n"
		"\![*]\q[Mineral,OnSetPot,category,Mineral,%(reference1)]\n"
		"\![*]\q[Any,OnSetPot,category,-,%(reference1)]\n"
	}
	elseif reference0 == "element"
	{
		"* Which element does this potion need?\n\n"
		"\![*]\q[Fire,OnSetPot,element,Fire,%(reference1)]\n"
		"\![*]\q[Air,OnSetPot,element,Air,%(reference1)]\n"
		"\![*]\q[Nature,OnSetPot,element,Nature,%(reference1)]\n"
		"\![*]\q[Water,OnSetPot,element,Water,%(reference1)]\n"
		"\![*]\q[Ice,OnSetPot,element,Ice,%(reference1)]\n"
		"\![*]\q[Crystal,OnSetPot,element,Crystal,%(reference1)]\n"
		"\![*]\q[Shadow,OnSetPot,element,Shadow,%(reference1)]\n"
		"\![*]\q[Light,OnSetPot,element,Light,%(reference1)]\n"
		"\![*]\q[Sun,OnSetPot,element,Sun,%(reference1)]\n"
		"\![*]\q[Moon,OnSetPot,element,Moon,%(reference1)]\n"
		"\![*]\q[Star,OnSetPot,element,Star,%(reference1)]\n"
		"\![*]\q[Dream,OnSetPot,element,Dream,%(reference1)]\n"
		"\![*]\q[Blood,OnSetPot,element,Blood,%(reference1)]\n"
		"\![*]\q[Poison,OnSetPot,element,Poison,%(reference1)]\n"
		"\![*]\q[Decay,OnSetPot,element,Decay,%(reference1)]\n"
		"\![*]\q[Acid,OnSetPot,element,Acid,%(reference1)]\n"
		"\![*]\q[Any,OnSetPot,element,-,%(reference1)]\n"
	}
	elseif reference0 == "origin"
	{
		"* Which origin does this potion need?\n\n"
		"\![*]\q[Magical,OnSetPot,origin,Magical,%(reference1)]\n"
		"\![*]\q[Divine,OnSetPot,origin,Divine,%(reference1)]\n"
		"\![*]\q[Otherworldly,OnSetPot,origin,Otherworldly,%(reference1)]\n"
		"\![*]\q[Any,OnSetPot,origin,-,%(reference1)]\n"
	}
}

OnSetPot
{
	_index  = TOINT(reference2)

	if reference0 == "category"
	{
		potUserReqCategory[_index] = reference1
	}
	elseif reference0 == "element"
	{
		potUserReqElement[_index] = reference1
	}
	elseif reference0 == "origin"
	{
		potUserReqOriging[_index] = reference1
	}
	--
	"\![raise,OnPotionPage,%(_index)]"
}

OnIngredientMenu : all
{
	"\_q\p[2]\b2\*\![set,autoscroll,disable]\f[align,center] **Found ingredients**:\n\n[half]\f[align,default]"
	for _i = 0, _j = 1, _nameFound = 0; _i < ARRAYSIZE(ingrName);_i++
	{
		if ingrUserName[_i] != ""
		{
			//if "_[o]" _in_ ingrUserCategory[_i] && "_[o]" _in_ ingrUserElement[_i] && "_[o]" _in_ ingrUserOrigin[_i]; _nameFound = 1
			if "_[o]" _in_ ingrUserCategory[_i] && "_[o]" _in_ ingrUserElement[_i]; _nameFound = 1
			else; _nameFound = 0

			if Buttons[1] == "ON" && _nameFound == 1 || Buttons[6] == "ON"
			{
				if _nameFound == 1; "==\![*]\__q[OnIngredientPage," + _i + "]" +  _j + "." + TOPROPER(ingrName[_i]) + "\__q==\n"
				else; "\![*]\__q[OnIngredientPage," + _i + "]" +  _j + "." + TOPROPER(ingrName[_i]) + "\__q\n"
			}
			else; "\![*]\__q[OnIngredientPage," + _i + "]" +  _j + "." + TOPROPER(ingrUserName[_i]) + "\__q\n"
			_j++
		}
	}
	"\n[half]\![*]\q[Previous page,OnBookMenu]\n"
	"\n[half]\![*]\q[Close the grimoire,]\n"
}

OnIngredientPage : all
{
	_index = TOINT(reference0)
	_nameFound = 0
	if ingrUserCategory[_index] == ""; ingrUserCategory[_index] = "?????"
	if ingrUserElement[_index] == ""; ingrUserElement[_index] = "?????"
	//if ingrUserOrigin[_index] == ""; ingrUserOrigin[_index] = "?????"
	--
	"\p[2]\b2\_q\![set,autoscroll,disable]\f[align,center]\_b[img/grimoire/%(_index).png,inline,--option=use_self_alpha]\f[default]\n"
	//if "_[o]" _in_ ingrUserCategory[_index] && "_[o]" _in_ ingrUserElement[_index] && "_[o]" _in_ ingrUserOrigin[_index]; _nameFound = 1
	if "_[o]" _in_ ingrUserCategory[_index] && "_[o]" _in_ ingrUserElement[_index]; _nameFound = 1
	else; _nameFound = 0

	"\f[align,center]-=**\__q[OnIngrNameChange,%(_index)]%(TOUPPER(ingrUserName[_index]))**=-\__q\n"
	if _nameFound == 1 || Buttons[6] == "ON"; "=-_%(ingrName[_index])_-=\n\n[half]"
	else; "=-_??????_-=\n\n[half]"
	"\f[align,default]**Category**: "
	if "_[o]" _in_ ingrUserCategory[_index]; "==%(REPLACE(ingrUserCategory[_index],'_[o]',''))==\n"
	elseif "_[x]" _in_ ingrUserCategory[_index]; "\__q[OnIngrChange,category,%(_index)]~~%(REPLACE(ingrUserCategory[_index],'_[x]',''))~~\__q\n"
	else; "\__q[OnIngrChange,category,%(_index)]%(ingrUserCategory[_index])\__q\n"
	"**Element**: "
	if "_[o]" _in_ ingrUserElement[_index]; "==%(REPLACE(ingrUserElement[_index],'_[o]',''))==\n"
	elseif "_[x]" _in_ ingrUserElement[_index]; "\__q[OnIngrChange,element,%(_index)]~~%(REPLACE(ingrUserElement[_index],'_[x]',''))~~\__q\n"
	else; "\__q[OnIngrChange,element,%(_index)]%(ingrUserElement[_index])\__q\n"
	/*"**Origin**: "
	if "_[o]" _in_ ingrUserOrigin[_index]; "==%(REPLACE(ingrUserOrigin[_index],'_[o]',''))==\n"
	elseif "_[x]" _in_ ingrUserOrigin[_index]; "\__q[OnIngrChange,origin,%(_index)]~~%(REPLACE(ingrUserOrigin[_index],'_[x]',''))~~\__q\n"
	else; "\__q[OnIngrChange,origin,%(_index)]%(ingrUserOrigin[_index])\__q\n"*/
	"**Description**:\n"
	if _nameFound == 1; ingrDesc[_index]
	else; "_?????_"
	"\n\n\n[half]\![*]\q[Previous page,OnIngredientMenu]\n"
	"\n[half]\![*]\q[Close the grimoire,]\n"
}

OnIngrNameChange
{
	"\p[2]What do you want to call this ingredient?\![open,inputbox,OningredientUserName,--reference=%(reference0),--timeout=0]"
}

OnIngrChange : all
{
	"\p[2]\b2\_q\![set,autoscroll,disable]"

	if reference0 == "category"
	{
		"* To which category does this ingredient belong?\n\n"
		"\![*]\q[Fauna,OnSetIng,category,Fauna,%(reference1)]\n"
		"\![*]\q[Flora,OnSetIng,category,Flora,%(reference1)]\n"
		"\![*]\q[Mineral,OnSetIng,category,Mineral,%(reference1)]\n"
	}
	elseif reference0 == "element"
	{
		"* To which element does this ingredient belong?\n\n"
		"\![*]\q[Fire,OnSetIng,element,Fire,%(reference1)]\n"
		"\![*]\q[Air,OnSetIng,element,Air,%(reference1)]\n"
		"\![*]\q[Nature,OnSetIng,element,Nature,%(reference1)]\n"
		"\![*]\q[Water,OnSetIng,element,Water,%(reference1)]\n"
		"\![*]\q[Ice,OnSetIng,element,Ice,%(reference1)]\n"
		"\![*]\q[Crystal,OnSetIng,element,Crystal,%(reference1)]\n"
		"\![*]\q[Shadow,OnSetIng,element,Shadow,%(reference1)]\n"
		"\![*]\q[Light,OnSetIng,element,Light,%(reference1)]\n"
		"\![*]\q[Sun,OnSetIng,element,Sun,%(reference1)]\n"
		"\![*]\q[Moon,OnSetIng,element,Moon,%(reference1)]\n"
		"\![*]\q[Star,OnSetIng,element,Star,%(reference1)]\n"
		"\![*]\q[Dream,OnSetIng,element,Dream,%(reference1)]\n"
		"\![*]\q[Blood,OnSetIng,element,Blood,%(reference1)]\n"
		"\![*]\q[Poison,OnSetIng,element,Poison,%(reference1)]\n"
		"\![*]\q[Decay,OnSetIng,element,Decay,%(reference1)]\n"
		"\![*]\q[Acid,OnSetIng,element,Acid,%(reference1)]\n"
	}
	elseif reference0 == "origin"
	{
		"* To which origin does this ingredient belong?\n\n"
		"\![*]\q[Magical,OnSetIng,origin,Magical,%(reference1)]\n"
		"\![*]\q[Divine,OnSetIng,origin,Divine,%(reference1)]\n"
		"\![*]\q[Otherworldly,OnSetIng,origin,Otherworldly,%(reference1)]\n"
	}
}

OnSetIng
{
	_index  = TOINT(reference2)

	if reference0 == "category"
	{
		ingrUserCategory[_index] = reference1
	}
	elseif reference0 == "element"
	{
		ingrUserElement[_index] = reference1
	}
	elseif reference0 == "origin"
	{
		ingrUserOrigin[_index] = reference1
	}
	--
	"\![raise,OnIngredientPage,%(_index)]"
}

OnBallMenu : all
{
	"\p[2]\b2\_q\![set,autoscroll,disable]* **You gaze into the crystal ball**\n"

	_hours = timers[0]/60
	_minutes = timers[0] - (_hours*60)
	--
	"\n\n[half]Time left before identification:\n\f[align,center]"
	if timers[0] < PaceSetting[1]
	{
		if  PaceSetting[1] > 60
		{
			_h = PaceSetting[1]/60
			_m = PaceSetting[1] - (_h*60)
			if _m != 0; "**%((_h)-_hours)h %(_m-_minutes)min**\n\n"
			else; "**%((_h-1)-_hours)h %(60-_minutes)min**\n\n"
		}
		else;"**%(PaceSetting[1]-_minutes)min**\n\n"
	}
	else; "==\q[READY,OnHint,ingr]==\n[half]"
	"\n\f[align,default]Time left before a recipe identifcation:\n\f[align,center]"
	if timers[0] < PaceSetting[2]
	{
		if  PaceSetting[2] > 60
		{
			_h = PaceSetting[2]/60
			_m = PaceSetting[2] - (_h*60)
			if _m != 0; "**%((_h)-_hours)h %(_m-_minutes)min**\n\n"
			else; "**%((_h-1)-_hours)h %(60-_minutes)min**\n\n"
		}
		else;"**%(PaceSetting[2]-_minutes)min**\n\n"
	}
	else; "==\q[READY,OnHint,pot]==\n\n"

	if potionTime != 0; "\f[align,default]Time before the potion wear off:\n\f[align,center]**%(potionTime-timers[2])min**\n\n[half]"

	"\f[align,default]\![*]\q[Close,Cancel]"
}

OnHint : all
{
	if reference0 == "ingr"
	{
		if Buttons[9] == "ON"
		{
			for _i = 0, _j = 1; _i < ARRAYSIZE(ingrName);_i++
			{
				if ingrUserName[_i] != ""
				{	
					_index = _i

					if ingrUserCategory[_index] == ""; ingrUserCategory[_index] = "?????"
					if ingrUserElement[_index] == ""; ingrUserElement[_index] = "?????"
					//if ingrUserOrigin[_index] == ""; ingrUserOrigin[_index] = "?????"
					
					ingrUserCategory[_index] = REPLACE(ingrUserCategory[_index],'_[o]','')
					ingrUserElement[_index] = REPLACE(ingrUserElement[_index],'_[o]','')
					//ingrUserOrigin[_index] = REPLACE(ingrUserOrigin[_index],'_[o]','')

					ingrUserCategory[_index] = REPLACE(ingrUserCategory[_index],'_[x]','')
					ingrUserElement[_index] = REPLACE(ingrUserElement[_index],'_[x]','')
					//ingrUserOrigin[_index] = REPLACE(ingrUserOrigin[_index],'_[x]','')

					if ingrUserCategory[_index] == ingrCategory[_index]; ingrUserCategory[_index] += "_[o]"
					else; ingrUserCategory[_index] += "_[x]"

					if ingrUserElement[_index] == ingrElement[_index]; ingrUserElement[_index] += "_[o]"
					else; ingrUserElement[_index] += "_[x]"

					//if ingrUserOrigin[_index] == ingrOrigin[_index]; ingrUserOrigin[_index] += "_[o]"
					//else; ingrUserOrigin[_index] += "_[x]"
				}
			}
			--
			timers[0] = 0
			ballStatus = 0
			--
			"\p[2]\s[2]\i[%(ballStatus)]"
			--
			"\![raise,OnIngredientMenu]"
		}
		else
		{
			"\p[2]\_q\p[2]\b2\![set,autoscroll,disable] **Which ingredient do you want to identify?**:\n\n[half]"
			for _i = 0, _j = 1,_nameFound = 0; _i < ARRAYSIZE(ingrName);_i++
			{
				if "_[o]" _in_ ingrUserCategory[_i] && "_[o]" _in_ ingrUserElement[_i]; _nameFound = 1
				else; _nameFound = 0

				if ingrUserName[_i] != "" && _nameFound != 1
				{
					if  Buttons[6] == "ON"; "\![*]\__q[OnCheck," + _i + ",ing]" +  _j + "." + TOPROPER(ingrName[_i]) + "\__q\n"
					else; "\![*]\__q[OnCheck," + _i + ",ing]" +  _j + "." + TOPROPER(ingrUserName[_i]) + "\__q\n"
					_j++
				}
			}
		}
	}
	else
	{
		if Buttons[10] == "ON"
		{
			for _i = 0, _j = 1; _i < ARRAYSIZE(ingrName);_i++
			{
				if ingrUserName[_i] != ""
				{
					_index = _i

					if potUserReqCategory[_index] == ""; potUserReqCategory[_index] = "?????"
					if potUserReqElement[_index] == ""; potUserReqElement[_index] = "?????"
					//if potUserReqOriging[_index] == ""; potUserReqOriging[_index] = "?????"
					
					potUserReqCategory[_index] = REPLACE(potUserReqCategory[_index],'_[o]','')
					potUserReqElement[_index] = REPLACE(potUserReqElement[_index],'_[o]','')
					//potUserReqOriging[_index] = REPLACE(potUserReqOriging[_index],'_[o]','')

					potUserReqCategory[_index] = REPLACE(potUserReqCategory[_index],'_[x]','')
					potUserReqElement[_index] = REPLACE(potUserReqElement[_index],'_[x]','')
					//potUserReqOriging[_index] = REPLACE(potUserReqOriging[_index],'_[x]','')

					if potUserReqCategory[_index] == potReqCategory[_index]; potUserReqCategory[_index] += "_[o]"
					else; potUserReqCategory[_index] += "_[x]"

					if potUserReqElement[_index] == potReqElement[_index]; potUserReqElement[_index] += "_[o]"
					else; potUserReqElement[_index] += "_[x]"

					//if potUserReqOriging[_index] == potReqOrigin[_index]; potUserReqOriging[_index] += "_[o]"
					//else; potUserReqOriging[_index] += "_[x]"
				}
			}

			timers[0] = 0
			ballStatus = 0
			--
			"\p[2]\s[2]\i[%(ballStatus)]"
			--
			"\![raise,OnPotionMenu]"
		}
		else
		{
			"\p[2]\_q\p[2]\b2\![set,autoscroll,disable] **Which potion do you want to verify?**:\n\n[half]"
			for _i = 0, _j = 1,_nameFound = 0; _i < ARRAYSIZE(potName);_i++
			{
				if "_[o]" _in_ potUserReqCategory[_i] && "_[o]" _in_ potUserReqElement[_i]; _nameFound = 1
				else; _nameFound = 0

				if potUserName[_i] != "" && _nameFound != 1
				{
					if Buttons[7] == "ON" && potUsed[_i] == 1; "\![*]\__q[OnCheck," + _i + ",pot]" +  _j + "." + TOPROPER(potName[_i]) + "\__q\n"
					else; "\![*]\__q[OnCheck," + _i + ",pot]" +  _j + "." + TOPROPER(potUserName[_i]) + "\__q\n"
					_j++
				}
			}
		}
	}
}

OnCheck
{
	if reference1 == "ing"
	{
		_index = TOINT(reference0)

		if ingrUserCategory[_index] == ""; ingrUserCategory[_index] = "?????"
		if ingrUserElement[_index] == ""; ingrUserElement[_index] = "?????"
		//if ingrUserOrigin[_index] == ""; ingrUserOrigin[_index] = "?????"
		
		ingrUserCategory[_index] = REPLACE(ingrUserCategory[_index],'_[o]','')
		ingrUserElement[_index] = REPLACE(ingrUserElement[_index],'_[o]','')
		//ingrUserOrigin[_index] = REPLACE(ingrUserOrigin[_index],'_[o]','')

		ingrUserCategory[_index] = REPLACE(ingrUserCategory[_index],'_[x]','')
		ingrUserElement[_index] = REPLACE(ingrUserElement[_index],'_[x]','')
		//ingrUserOrigin[_index] = REPLACE(ingrUserOrigin[_index],'_[x]','')

		if ingrUserCategory[_index] == ingrCategory[_index]; ingrUserCategory[_index] += "_[o]"
		else; ingrUserCategory[_index] += "_[x]"

		if ingrUserElement[_index] == ingrElement[_index]; ingrUserElement[_index] += "_[o]"
		else; ingrUserElement[_index] += "_[x]"

		//if ingrUserOrigin[_index] == ingrOrigin[_index]; ingrUserOrigin[_index] += "_[o]"
		//else; ingrUserOrigin[_index] += "_[x]"

		timers[0] = 0
		ballStatus = 0
		--
		"\p[2]\s[2]\i[%(ballStatus)]"
		--
		"\![raise,OnIngredientPage,%(_index)]"
	}
	else
	{
		_index = TOINT(reference0)

		if potUserReqCategory[_index] == ""; potUserReqCategory[_index] = "?????"
		if potUserReqElement[_index] == ""; potUserReqElement[_index] = "?????"
		//if potUserReqOriging[_index] == ""; potUserReqOriging[_index] = "?????"
		
		potUserReqCategory[_index] = REPLACE(potUserReqCategory[_index],'_[o]','')
		potUserReqElement[_index] = REPLACE(potUserReqElement[_index],'_[o]','')
		//potUserReqOriging[_index] = REPLACE(potUserReqOriging[_index],'_[o]','')

		potUserReqCategory[_index] = REPLACE(potUserReqCategory[_index],'_[x]','')
		potUserReqElement[_index] = REPLACE(potUserReqElement[_index],'_[x]','')
		//potUserReqOriging[_index] = REPLACE(potUserReqOriging[_index],'_[x]','')

		if potUserReqCategory[_index] == potReqCategory[_index]; potUserReqCategory[_index] += "_[o]"
		else; potUserReqCategory[_index] += "_[x]"

		if potUserReqElement[_index] == potReqElement[_index]; potUserReqElement[_index] += "_[o]"
		else; potUserReqElement[_index] += "_[x]"

		//if potUserReqOriging[_index] == potReqOrigin[_index]; potUserReqOriging[_index] += "_[o]"
		//else; potUserReqOriging[_index] += "_[x]"

		timers[0] = 0
		ballStatus = 0
		--
		"\p[2]\s[2]\i[%(ballStatus)]"
		--
		"\![raise,OnPotionPage,%(_index)]"
	}
}

OnBagMenu : all
{
	"\p[2]\_q* What are you looking for?\n\n"
	"\![*]\q[Ingredients,OnBagIngr]\n"
	"\![*]\q[Potions,OnBagPot]\n"
	"\n\n[half]\![*]\q[Nothing,]"
}

OnBagIngr : all
{
	_countIngr = ARRAYADD(bagIngr)
	_nameFound = 0
	--
	if TOINT(_countIngr) > 0
	{
		"\p[2]\b2\![set,autoscroll,disable]\_q* Which ingredients do you want to add?\n\n"
		for _i = 0; _i < ARRAYSIZE(ingrName);_i++
		{
			//if "_[o]" _in_ ingrUserCategory[_i] && "_[o]" _in_ ingrUserElement[_i] && "_[o]" _in_ ingrUserOrigin[_i]; _nameFound = 1
			if "_[o]" _in_ ingrUserCategory[_i] && "_[o]" _in_ ingrUserElement[_i] ; _nameFound = 1
			else; _nameFound = 0

			if ingrUserName[_i] == "" && bagIngr[_i] != 0; ingrUserName[_i] = "ingredient Nr." + NoEmptyARRAYSIZE(ingrUserName)
			elseif ingrUserName[_i] == "?????" && bagIngr[_i] != 0; ingrUserName[_i] = "ingredient Nr." + NoEmptyARRAYSIZE(ingrUserName)

			if bagIngr[_i] != 0
			{
				if Buttons[1] == "ON" && _nameFound == 1 || Buttons[6] == "ON"; "\![*]\__q[OnPlop,%(_i)] Add %(ingrName[_i]) (%(bagIngr[_i]))\__q\n"
				else; "\![*]\__q[OnPlop,%(_i)] Add %(ingrUserName[_i]) (%(bagIngr[_i]))\__q\n"
			}
		}
	}
	else
	{
		"* You don't have any ingredients "
	}
	--
	"\n\n[half]\![*]\q[Close the bag,]"
	if _argv[0] != "" 
	{
		"\1\f[align,center]\f[height,+5]"
		if "_[o]" _in_ ingrUserCategory[_argv[0]] && "_[o]" _in_ ingrUserElement[_argv[0]] ; _nameFound = 1
			else; _nameFound = 0
		if Buttons[1] == "ON" && _nameFound == 1 || Buttons[6] == "ON"; "**%(ingrName[_argv[0]])**\n"
		else; "**%(ingrUserName[_argv[0]])**\n"
		"\_b[img/bag/%(_argv[0]).png,inline,--option=use_self_alpha]\n\f[default]"
	}

}


OnBagPot : all
{
	_countPot = ARRAYADD(bagPotions)
	_nameFound = 0

	if TOINT(_countPot) != 0
	{
		"\p[2]\b2\![set,autoscroll,disable]\_q* Which potion do you want to take out?\n\n"

		for _i = 0; _i < ARRAYSIZE(potName);_i++
		{
			//if "_[o]" _in_ potUserReqCategory[_i] && "_[o]" _in_ potUserReqElement[_i] && "_[o]" _in_ potUserReqOriging[_i]; _nameFound = 1
			if "_[o]" _in_ potUserReqCategory[_i] && "_[o]" _in_ potUserReqElement[_i]; _nameFound = 1
			else; _nameFound = 0

			if potUserName[_i] == "" && bagPotions[_i] != 0; potUserName[_i] = "Potion Nr." + NoEmptyARRAYSIZE(potUserName)
			elseif potUserName[_i] == "?????"; potUserName[_i] = "Potion Nr." + NoEmptyARRAYSIZE(potUserName)

			if bagPotions[_i] != 0
			{
				if Buttons[1] == "ON" && _nameFound == 1 || Buttons[7] == "ON" && potUsed[_i] == 1; "\![*]\__q[OnTakePot,%(_i)] Take %(potName[_i]) (%(bagPotions[_i]))\__q\n"
				else; "\![*]\__q[OnTakePot,%(_i)] Take %(potUserName[_i]) (%(bagPotions[_i]))\__q\n"
			}
		}
	}
	else
	{
		"* You don't have any potions stored"
	}
	--
	"\n\n[half]\![*]\q[Close the bag,]"
}

OnTakePot
{
	if entityCount < 5; entityCount = 5
	else; entityCount++
	--
	_index = reference0
	bagPotions[_index]--
	entity[entityCount] = potName[_index]
	entitySurface[entityCount] = bottleSurface
	--
	"\p[%(entityCount)]\![move,--X=-100,--Y=0,--time=0,--base=2]\p[%(entityCount)]\s[%(entitySurface[entityCount])]\i[0]\![set,alignmenttodesktop,free]\![raise,OnBagPot]\e"
}

OnPlop
{
	if entityCount < 5; entityCount = 5
	else; entityCount++
	--
	_index = reference0
	bagIngr[_index]--
	entity[entityCount] = ingrName[_index]
	entitySurface[entityCount] = ingrSurf[_index]
	--
	"\p[%(entityCount)]\![move,--X=-100,--Y=0,--time=0,--base=2]\p[%(entityCount)]\s[%(entitySurface[entityCount])]\![set,alignmenttodesktop,free]\![raise,OnBagIngr]\e"

}